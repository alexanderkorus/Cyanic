{% for type in types.all %}
{% if type|annotated:"AutoGenerateComponent" %}
// sourcery:inline:auto:{{ type.name }}.AutoGenerateComponent
    /**
     Work around Initializer because memberwise initializers are all or nothing
     - Parameters:
         - id: The unique identifier of the {{ type.name }}.
    */
    {{ type.accessLevel }} init(id: String) {
        self.id = id
    }

{% for var in type.allVariables|!annotated:"isInExtension" %}
{% if var.annotations.skipHashing and var.annotations.skipEquality %}    // sourcery: skipHashing, skipEquality {% endif %}
{% if var.annotations.defaultValue %}
    {{ type.accessLevel }} {% if var.annotations.isWeak %}weak {% endif %}{% if var.annotations.isLazy %}lazy {% endif %}{% if var.isMutable %}var{% else %}let{% endif %} {{ var.name }}: {{ var.typeName }} = {{ var.annotations.defaultValue }}

{% elif var.annotations.isLayout %}
    {{ type.accessLevel }} var layout: ComponentLayout { return {{ type.annotations.ComponentLayout }}(component: self) }

{% else %}
    {{ type.accessLevel }} {% if var.annotations.isWeak %}weak {% endif %}{% if var.isMutable %}var{% else %}let{% endif %} {{ var.name }}: {{ var.typeName }}

{% endif %}
{% endfor %}
    {{ type.accessLevel }} var identity: {{ type.name }} { return self }

// sourcery:end
{% endif %}
{% endfor %}
