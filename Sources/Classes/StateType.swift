//
//  StateType.swift
//  FFUFComponents
//
//  Created by Julio Miguel Alorro on 2/7/19.
//  Copyright Â© 2019 Feil, Feil, & Feil  GmbH. All rights reserved.
//

/**
 StateType is the base class for the state of the component in the BaseCollectionVC. It should contain the relevant properties from the model
 that is supposed to be displayed on the UI or user input from UIViews like a UITextField.
 Conforms to Hashable because it is used as the identity of the Component for RxDataSources diffing.

 Most likely generated by Sourcery.

 - Warning:
    - You must override the static method == (lhs:rhs:).
    - You must override the hash(into:) method and call super when subclassing otherwise diffing will most likely not work as intended.
*/
open class StateType: Hashable {

    public init() {
        guard type(of: self) != StateType.self else {
            fatalError(
                "StateType instances cannot be created. Use subclasses instead"
            )
        }
    }

    public static func == (lhs: StateType, rhs: StateType) -> Bool {
        fatalError("Must be overridden")
    }

    public func hash(into hasher: inout Hasher) {
        let ownType: StateType.Type = type(of: self)
        hasher.combine(ObjectIdentifier(ownType))
    }

}
